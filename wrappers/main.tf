module "wrapper" {
  source = "../"

  for_each = var.items

  api_destinations               = try(each.value.api_destinations, var.defaults.api_destinations, {})
  append_connection_postfix      = try(each.value.append_connection_postfix, var.defaults.append_connection_postfix, true)
  append_destination_postfix     = try(each.value.append_destination_postfix, var.defaults.append_destination_postfix, true)
  append_pipe_postfix            = try(each.value.append_pipe_postfix, var.defaults.append_pipe_postfix, true)
  append_rule_postfix            = try(each.value.append_rule_postfix, var.defaults.append_rule_postfix, true)
  append_schedule_group_postfix  = try(each.value.append_schedule_group_postfix, var.defaults.append_schedule_group_postfix, true)
  append_schedule_postfix        = try(each.value.append_schedule_postfix, var.defaults.append_schedule_postfix, true)
  archives                       = try(each.value.archives, var.defaults.archives, {})
  attach_api_destination_policy  = try(each.value.attach_api_destination_policy, var.defaults.attach_api_destination_policy, false)
  attach_cloudwatch_policy       = try(each.value.attach_cloudwatch_policy, var.defaults.attach_cloudwatch_policy, false)
  attach_ecs_policy              = try(each.value.attach_ecs_policy, var.defaults.attach_ecs_policy, false)
  attach_kinesis_firehose_policy = try(each.value.attach_kinesis_firehose_policy, var.defaults.attach_kinesis_firehose_policy, false)
  attach_kinesis_policy          = try(each.value.attach_kinesis_policy, var.defaults.attach_kinesis_policy, false)
  attach_lambda_policy           = try(each.value.attach_lambda_policy, var.defaults.attach_lambda_policy, false)
  attach_policies                = try(each.value.attach_policies, var.defaults.attach_policies, false)
  attach_policy                  = try(each.value.attach_policy, var.defaults.attach_policy, false)
  attach_policy_json             = try(each.value.attach_policy_json, var.defaults.attach_policy_json, false)
  attach_policy_jsons            = try(each.value.attach_policy_jsons, var.defaults.attach_policy_jsons, false)
  attach_policy_statements       = try(each.value.attach_policy_statements, var.defaults.attach_policy_statements, false)
  attach_sfn_policy              = try(each.value.attach_sfn_policy, var.defaults.attach_sfn_policy, false)
  attach_sns_policy              = try(each.value.attach_sns_policy, var.defaults.attach_sns_policy, false)
  attach_sqs_policy              = try(each.value.attach_sqs_policy, var.defaults.attach_sqs_policy, false)
  attach_tracing_policy          = try(each.value.attach_tracing_policy, var.defaults.attach_tracing_policy, false)
  bus_name                       = try(each.value.bus_name, var.defaults.bus_name, "default")
  cloudwatch_target_arns         = try(each.value.cloudwatch_target_arns, var.defaults.cloudwatch_target_arns, [])
  connections                    = try(each.value.connections, var.defaults.connections, {})
  create                         = try(each.value.create, var.defaults.create, true)
  create_api_destinations        = try(each.value.create_api_destinations, var.defaults.create_api_destinations, false)
  create_archives                = try(each.value.create_archives, var.defaults.create_archives, false)
  create_bus                     = try(each.value.create_bus, var.defaults.create_bus, true)
  create_connections             = try(each.value.create_connections, var.defaults.create_connections, false)
  create_permissions             = try(each.value.create_permissions, var.defaults.create_permissions, true)
  create_pipes                   = try(each.value.create_pipes, var.defaults.create_pipes, true)
  create_role                    = try(each.value.create_role, var.defaults.create_role, true)
  create_rules                   = try(each.value.create_rules, var.defaults.create_rules, true)
  create_schedule_groups         = try(each.value.create_schedule_groups, var.defaults.create_schedule_groups, true)
  create_schedules               = try(each.value.create_schedules, var.defaults.create_schedules, true)
  create_schemas_discoverer      = try(each.value.create_schemas_discoverer, var.defaults.create_schemas_discoverer, false)
  create_targets                 = try(each.value.create_targets, var.defaults.create_targets, true)
  ecs_target_arns                = try(each.value.ecs_target_arns, var.defaults.ecs_target_arns, [])
  event_source_name              = try(each.value.event_source_name, var.defaults.event_source_name, null)
  kinesis_firehose_target_arns   = try(each.value.kinesis_firehose_target_arns, var.defaults.kinesis_firehose_target_arns, [])
  kinesis_target_arns            = try(each.value.kinesis_target_arns, var.defaults.kinesis_target_arns, [])
  lambda_target_arns             = try(each.value.lambda_target_arns, var.defaults.lambda_target_arns, [])
  number_of_policies             = try(each.value.number_of_policies, var.defaults.number_of_policies, 0)
  number_of_policy_jsons         = try(each.value.number_of_policy_jsons, var.defaults.number_of_policy_jsons, 0)
  permissions                    = try(each.value.permissions, var.defaults.permissions, {})
  pipes                          = try(each.value.pipes, var.defaults.pipes, {})
  policies                       = try(each.value.policies, var.defaults.policies, [])
  policy                         = try(each.value.policy, var.defaults.policy, null)
  policy_json                    = try(each.value.policy_json, var.defaults.policy_json, null)
  policy_jsons                   = try(each.value.policy_jsons, var.defaults.policy_jsons, [])
  policy_statements              = try(each.value.policy_statements, var.defaults.policy_statements, {})
  role_description               = try(each.value.role_description, var.defaults.role_description, null)
  role_force_detach_policies     = try(each.value.role_force_detach_policies, var.defaults.role_force_detach_policies, true)
  role_name                      = try(each.value.role_name, var.defaults.role_name, null)
  role_path                      = try(each.value.role_path, var.defaults.role_path, null)
  role_permissions_boundary      = try(each.value.role_permissions_boundary, var.defaults.role_permissions_boundary, null)
  role_tags                      = try(each.value.role_tags, var.defaults.role_tags, {})
  rules                          = try(each.value.rules, var.defaults.rules, {})
  schedule_groups                = try(each.value.schedule_groups, var.defaults.schedule_groups, {})
  schedule_group_timeouts        = try(each.value.schedule_group_timeouts, var.defaults.schedule_group_timeouts, {})
  schedules                      = try(each.value.schedules, var.defaults.schedules, {})
  schemas_discoverer_description = try(each.value.schemas_discoverer_description, var.defaults.schemas_discoverer_description, "Auto schemas discoverer event")
  sfn_target_arns                = try(each.value.sfn_target_arns, var.defaults.sfn_target_arns, [])
  sns_target_arns                = try(each.value.sns_target_arns, var.defaults.sns_target_arns, [])
  sqs_target_arns                = try(each.value.sqs_target_arns, var.defaults.sqs_target_arns, [])
  tags                           = try(each.value.tags, var.defaults.tags, {})
  targets                        = try(each.value.targets, var.defaults.targets, {})
  trusted_entities               = try(each.value.trusted_entities, var.defaults.trusted_entities, [])
}
